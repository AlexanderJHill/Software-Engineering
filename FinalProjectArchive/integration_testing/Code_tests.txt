For the code integration testing, only the Spot componenet needed to be tested. 
The Spot part includes all the other classes (Agent and Strategy). If Spot works then all 
the other classes are working. Unit testing also covers integration testing when needed 
since Spot is dependent on the Agent and Strategy classes. It is also dependent on the user input 
from the GUI. Since the code and GUI are not connected yet, values used are random.

To do integration testing:
Be sure agent.cpp/.h strategy.cpp/.h spot.cpp/.h randomgenerator.cpp/.h codetest.cpp are in the same directory
Compile the following files: agent.cpp strategy.cpp spot.cpp randomgenerator.cpp codetest.cpp 
Then execute the files.
This test would print the output generated. The types of outputs are how crowded a spot would be
and the score of all twenty strategies.
